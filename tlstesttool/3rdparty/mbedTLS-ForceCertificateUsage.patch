--- a/include/mbedtls/ssl.h	2022-07-27 15:45:26.822228000 +0200
+++ b/include/mbedtls/ssl.h	2022-09-30 13:07:12.155211778 +0200
@@ -645,6 +645,7 @@
 	uint16_t             elliptic_curve; /*!< value for overwriting elliptic curve */
 	unsigned int         overwrite_hello_version : 1;  /*!< overwrite version in Client/ServerHello?            */
 	unsigned char        hello_version[2];             /*!< value for overwriting version in Client/ServerHello */
+    unsigned int         force_certificate_usage : 1; /*!< pick the first certificate found if there is no match instead of failing */
 };
 
 
--- a/library/ssl_srv.c	2022-07-27 15:45:26.822228000 +0200
+++ b/library/ssl_srv.c	2022-09-30 13:08:46.919252376 +0200
@@ -628,6 +628,11 @@
         return( -1 );
     }
 
+    if( 1 == ssl->conf->force_certificate_usage )
+    {
+		fallback = list;
+    }
+
     for( cur = list; cur != NULL; cur = cur->next )
     {
         MBEDTLS_SSL_DEBUG_CRT( 3, "candidate certificate chain, certificate",
