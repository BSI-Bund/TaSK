--- a/library/ssl_cli.c	2021-05-31 11:45:09.766884700 +0200
+++ b/library/ssl_cli.c	2021-05-31 11:08:39.032512300 +0200
@@ -961,6 +961,8 @@
         *p++ = MBEDTLS_SSL_COMPRESS_NULL;
     }
 
+    unsigned char* start_extension = p + 2;
+
     // First write extensions, then the total length
     //
 	if( ssl->conf->overwrite_extensions != 0 )
@@ -1036,6 +1038,11 @@
     /* olen unused if all extensions are disabled */
     ((void) olen);
 
+    if( ext_len > 0 )
+    {
+        MBEDTLS_SSL_DEBUG_BUF( 3, "client hello, extensions", start_extension, ext_len );
+    }
+
     MBEDTLS_SSL_DEBUG_MSG( 3, ( "client hello, total extension length: %d",
                    ext_len ) );
 
--- a/library/ssl_srv.c	2021-05-31 11:45:10.363293500 +0200
+++ b/library/ssl_srv.c	2021-05-31 11:01:43.919824600 +0200
@@ -1540,7 +1540,7 @@
         ext_len = 0;
 
     ext = buf + ext_offset + 2;
-    MBEDTLS_SSL_DEBUG_BUF( 3, "client hello extensions", ext, ext_len );
+    MBEDTLS_SSL_DEBUG_BUF( 3, "client hello, extensions", ext, ext_len );
 
     while( ext_len != 0 )
     {
@@ -2397,6 +2397,7 @@
     MBEDTLS_SSL_DEBUG_MSG( 3, ( "server hello, compress alg.: 0x%02X",
                    ssl->session_negotiate->compression ) );
 
+    unsigned char* start_extension = p + 2;
     /*
      *  First write extensions, then the total length
      */
@@ -2454,6 +2455,11 @@
 #endif
     }
 
+    if( ext_len > 0 )
+    {
+        MBEDTLS_SSL_DEBUG_BUF( 3, "server hello, extensions", start_extension, ext_len );
+    }
+
     MBEDTLS_SSL_DEBUG_MSG( 3, ( "server hello, total extension length: %d", ext_len ) );
 
     if( ext_len > 0 )
